// <auto-generated />
using System;
using Katalogna_targovia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Katalogna_targovia.Migrations
{
    [DbContext(typeof(KatalognaTargoviaDbContext))]
    [Migration("20200315105011_KatDb")]
    partial class KatDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Katalogna_targovia.Models.Client", b =>
                {
                    b.Property<string>("Egn")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Egn");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Katalogna_targovia.Models.Distributor", b =>
                {
                    b.Property<int>("DistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DistId");

                    b.ToTable("Distributors");
                });

            modelBuilder.Entity("Katalogna_targovia.Models.Product", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>(" DistributorId")
                        .HasColumnType("int");

                    b.Property<int?>("CuantityProduct")
                        .HasColumnType("int");

                    b.Property<int>("DistributorId")
                        .HasColumnType("int");

                    b.Property<string>("KlientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Number");

                    b.HasIndex(" DistributorId");

                    b.HasIndex("KlientId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Katalogna_targovia.Models.Product", b =>
                {
                    b.HasOne("Katalogna_targovia.Models.Distributor", "Distributor")
                        .WithMany("Products")
                        .HasForeignKey(" DistributorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Katalogna_targovia.Models.Client", "Client")
                        .WithMany("Products")
                        .HasForeignKey("KlientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
