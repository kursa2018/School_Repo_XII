// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StokiPoKatalog;

namespace StokiPoKatalog.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    [Migration("20200316194351_bdCatalogCreate")]
    partial class bdCatalogCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StokiPoKatalog.Models.Client", b =>
                {
                    b.Property<string>("Egn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Egn");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("StokiPoKatalog.Models.Distributor", b =>
                {
                    b.Property<int>("DistrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TelContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DistrId");

                    b.ToTable("Distributors");
                });

            modelBuilder.Entity("StokiPoKatalog.Models.Product", b =>
                {
                    b.Property<string>("Clients")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Distributors")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naimenovanie")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Clients", "Distributors");

                    b.HasIndex("Distributors");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("StokiPoKatalog.Models.Product", b =>
                {
                    b.HasOne("StokiPoKatalog.Models.Client", "Client")
                        .WithMany("Products")
                        .HasForeignKey("Clients")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StokiPoKatalog.Models.Distributor", "Distributor")
                        .WithMany("Products")
                        .HasForeignKey("Distributors")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
